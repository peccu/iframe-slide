{"version":3,"sources":["app.js"],"names":["key","interval","setIntervalDuration","ms","getInterval","fetchSrcs","srcs","JSON","parse","window","localStorage","getItem","showSrcs","console","log","storeSrcs","setItem","stringify","addSrc","src","push","getFrame","document","getElementById","setSrc","getCurrensSrc","timer","currentIndex","next","length","auto","warn","setInterval","stop","clearInterval","help"],"mappings":";AAAA,IAAMA,EAAM,eACRC,EAAW,IACTC,EAAsB,SAACC,GACvBA,IAGJF,EAAWE,IAEPC,EAAc,WACXH,OAAAA,GAEHI,EAAY,WACZC,IAAAA,EAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQX,IAI3CM,OAHHA,IACFA,EAAO,IAEFA,GAEHM,EAAW,WACfC,QAAQC,IAAIT,MAERU,EAAY,SAACT,GACVG,OAAAA,OAAOC,aAAaM,QAAQhB,EAAKO,KAAKU,UAAUX,KAEnDY,EAAS,SAACC,GACVb,IAAAA,EAAOD,IACXC,EAAKc,KAAKD,GACVJ,EAAUT,IAENe,EAAW,WACRC,OAAAA,SAASC,eAAevB,IAE3BwB,EAAS,SAACL,GACVA,IAGJE,IAAWF,IAAMA,IAEbM,EAAgB,WACbJ,OAAAA,IAAWF,KAEhBO,EAAQ,KACRC,EAAe,EACbC,EAAO,WACXf,QAAQC,IAAI,UAAW,CAACa,EAAcF,MAClCnB,IAAAA,EAAOD,IACXmB,EAAOlB,EAAMqB,EAAerB,EAAKuB,SACjCF,KAEIG,EAAO,WACRJ,OAAAA,GACDb,QAAQkB,KAAK,mBACN,OAETH,IACAF,EAAQjB,OAAOuB,YAAYJ,EAAMxB,OAG7B6B,EAAO,WACPP,IAGJjB,OAAOyB,cAAcR,GACrBA,EAAQ,OAEJS,EAAO,WACXtB,QAAQC,IAAR,yaAeFL,OAAOP,oBAAsBA,EAC7BO,OAAOL,YAAcA,EACrBK,OAAOJ,UAAYA,EACnBI,OAAOG,SAAWA,EAClBH,OAAOM,UAAYA,EACnBN,OAAOS,OAASA,EAChBT,OAAOY,SAAWA,EAClBZ,OAAOe,OAASA,EAChBf,OAAOgB,cAAgBA,EACvBhB,OAAOmB,KAAOA,EACdnB,OAAOqB,KAAOA,EACdrB,OAAOwB,KAAOA,EACdxB,OAAO0B,KAAOA,EAEdL","file":"app.a64273b1.map","sourceRoot":"..","sourcesContent":["const key = 'iframe-slide';\nlet interval = 10 * 60 * 1000;\nconst setIntervalDuration = (ms) => {\n  if(!ms){\n    return;\n  }\n  interval = ms;\n};\nconst getInterval = () => {\n  return interval;\n};\nconst fetchSrcs = () => {\n  let srcs = JSON.parse(window.localStorage.getItem(key));\n  if(!srcs){\n    srcs = [];\n  }\n  return srcs;\n};\nconst showSrcs = () => {\n  console.log(fetchSrcs());\n};\nconst storeSrcs = (srcs) => {\n  return window.localStorage.setItem(key, JSON.stringify(srcs));\n};\nconst addSrc = (src) => {\n  let srcs = fetchSrcs();\n  srcs.push(src);\n  storeSrcs(srcs);\n};\nconst getFrame = () => {\n  return document.getElementById(key);\n};\nconst setSrc = (src) => {\n  if(!src){\n    return;\n  }\n  getFrame().src = src;\n};\nconst getCurrensSrc = () => {\n  return getFrame().src;\n};\nlet timer = null;\nlet currentIndex = 0;\nconst next = () => {\n  console.log('current', [currentIndex, getCurrensSrc()]);\n  let srcs = fetchSrcs();\n  setSrc(srcs[(currentIndex % srcs.length)]);\n  currentIndex++;\n};\nconst auto = () => {\n  if(timer){\n    console.warn('already started');\n    return null;\n  }\n  next();\n  timer = window.setInterval(next, getInterval());\n  return timer;\n};\nconst stop = () => {\n  if(!timer){\n    return;\n  }\n  window.clearInterval(timer);\n  timer = null;\n};\nconst help = () => {\n  console.log(`\nsetIntervalDuration(interval): set refresh interval (ms). default: 10min\ngetInterval(): get current refresh interval (ms).\naddSrc(url): add url\nshowSrcs(): show stored urls\nfetchSrcs(): return srcs (Array)\nstoreSrcs(srcs): store srcs (Array)\nsetSrc(src): sets src into iframe.src\ngetCurrensSrc(): get current src\nnext(): set next url\nauto(): start interval\nstop(): stop interval\nhelp(): show this messages\n`);\n};\nwindow.setIntervalDuration = setIntervalDuration;\nwindow.getInterval = getInterval;\nwindow.fetchSrcs = fetchSrcs;\nwindow.showSrcs = showSrcs;\nwindow.storeSrcs = storeSrcs;\nwindow.addSrc = addSrc;\nwindow.getFrame = getFrame;\nwindow.setSrc = setSrc;\nwindow.getCurrensSrc = getCurrensSrc;\nwindow.next = next;\nwindow.auto = auto;\nwindow.stop = stop;\nwindow.help = help;\n\nauto();\n"]}