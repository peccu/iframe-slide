{"version":3,"sources":["toggle-fullscreen.js","isios.js","app.js"],"names":["_toggleFullScreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","_element","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","isFullscreenSupports","userAgent","window","navigator","iPadSafari","match","iOS","majorReleaseNumber","split","replace","key","interval","setIntervalDuration","ms","getInterval","fetchSrcs","srcs","JSON","parse","localStorage","getItem","showSrcs","console","log","storeSrcs","setItem","stringify","addSrc","src","push","getFrame","getElementById","setSrc","getCurrensSrc","timer","currentIndex","next","length","auto","warn","setInterval","stop","clearInterval","help","fullscreen"],"mappings":"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","file":"app.49590b93.map","sourceRoot":"..","sourcesContent":["// https://dev.to/marvindanig/fullscreen-web-apps-on-ipad-safari--3p9b\nconst _toggleFullScreen = function _toggleFullScreen() {\n    if (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement) {\n        if (document.cancelFullScreen) {\n            document.cancelFullScreen();\n        } else {\n            if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else {\n                if (document.webkitCancelFullScreen) {\n                    document.webkitCancelFullScreen();\n                }\n            }\n        }\n    } else {\n        const _element = document.documentElement;\n        if (_element.requestFullscreen) {\n            _element.requestFullscreen();\n        } else {\n            if (_element.mozRequestFullScreen) {\n                _element.mozRequestFullScreen();\n            } else {\n                if (_element.webkitRequestFullscreen) {\n                    _element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n                }\n            }\n        }\n    }\n};\nexport default _toggleFullScreen;\n\n","// based on https://dev.to/marvindanig/fullscreen-web-apps-on-ipad-safari--3p9b\nconst userAgent = window.navigator.userAgent;\n\nconst iPadSafari =\n      !!userAgent.match(/iPad/i) &&       // Detect iPad first.\n  !!userAgent.match(/WebKit/i) &&     // Filter browsers with webkit engine only\n  !userAgent.match(/CriOS/i) &&       // Eliminate Chrome & Brave\n  !userAgent.match(/OPiOS/i) &&       // Rule out Opera\n  !userAgent.match(/FxiOS/i) &&       // Rule out Firefox\n  !userAgent.match(/FocusiOS/i);      // Eliminate Firefox Focus as well!\n\nconst iOS = () => {\n  if(!userAgent.match(/ipad|iphone|ipod/i)){\n    return null;\n  }\n  const iOS = {};\n  iOS.majorReleaseNumber = +userAgent.match(/OS (\\d)?\\d_\\d(_\\d)?/i)[0].split('_')[0].replace('OS ', '');\n  return iOS;\n};\n\nconst isFullscreenSupports = () => {\n  return !(userAgent.match(/iPhone/i) || userAgent.match(/iPod/i) ||\n           (userAgent.match(/iPad/i) && iOS().majorReleaseNumber < 12) ||\n           (userAgent.match(/iPad/i) && !iPadSafari));\n};\nexport default isFullscreenSupports;\n","import fullscreen from './toggle-fullscreen.js';\nimport isFullscreenSupports from './isios.js';\n\nconst key = 'iframe-slide';\nlet interval = 10 * 60 * 1000;\nconst setIntervalDuration = (ms) => {\n  if(!ms){\n    return;\n  }\n  interval = ms;\n};\nconst getInterval = () => {\n  return interval;\n};\nconst fetchSrcs = () => {\n  let srcs = JSON.parse(window.localStorage.getItem(key));\n  if(!srcs){\n    srcs = [];\n  }\n  return srcs;\n};\nconst showSrcs = () => {\n  console.log(fetchSrcs());\n};\nconst storeSrcs = (srcs) => {\n  return window.localStorage.setItem(key, JSON.stringify(srcs));\n};\nconst addSrc = (src) => {\n  let srcs = fetchSrcs();\n  srcs.push(src);\n  storeSrcs(srcs);\n};\nconst getFrame = () => {\n  return document.getElementById(key);\n};\nconst setSrc = (src) => {\n  if(!src){\n    return;\n  }\n  getFrame().src = src;\n};\nconst getCurrensSrc = () => {\n  return getFrame().src;\n};\nlet timer = null;\nlet currentIndex = 0;\nconst next = () => {\n  console.log('current', [currentIndex, getCurrensSrc()]);\n  let srcs = fetchSrcs();\n  setSrc(srcs[(currentIndex % srcs.length)]);\n  currentIndex++;\n};\nconst auto = () => {\n  if(timer){\n    console.warn('already started');\n    return null;\n  }\n  next();\n  timer = window.setInterval(next, getInterval());\n  return timer;\n};\nconst stop = () => {\n  if(!timer){\n    return;\n  }\n  window.clearInterval(timer);\n  timer = null;\n};\nconst help = () => {\n  console.log(`\nsetIntervalDuration(interval): set refresh interval (ms). default: 10min\ngetInterval(): get current refresh interval (ms).\naddSrc(url): add url\nshowSrcs(): show stored urls\nfetchSrcs(): return srcs (Array)\nstoreSrcs(srcs): store srcs (Array)\nsetSrc(src): sets src into iframe.src\ngetCurrensSrc(): get current src\nnext(): set next url\nauto(): start interval\nstop(): stop interval\nhelp(): show this messages\nfullscreen(): toggle fullscreen\n`);\n};\nwindow.setIntervalDuration = setIntervalDuration;\nwindow.getInterval = getInterval;\nwindow.fetchSrcs = fetchSrcs;\nwindow.showSrcs = showSrcs;\nwindow.storeSrcs = storeSrcs;\nwindow.addSrc = addSrc;\nwindow.getFrame = getFrame;\nwindow.setSrc = setSrc;\nwindow.getCurrensSrc = getCurrensSrc;\nwindow.next = next;\nwindow.auto = auto;\nwindow.stop = stop;\nwindow.help = help;\nwindow.fullscreen = fullscreen;\nauto();\nif(isFullscreenSupports()){\n  fullscreen();\n}\n"]}